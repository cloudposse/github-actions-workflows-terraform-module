name: |-
  Features branch (Pull request) workflow 
  
  Build, test Docker image, deploy it to EKS `preview` environment depends of PR labels  
  
  ### Usage 
  
  Create in your repo  __`.github/workflows/feature.yaml`__
  
  ```yaml
    name: Feature Branch
    on:
      pull_request:
        branches: [ 'master' ]
        types: [opened, synchronize, reopened, closed, labeled, unlabeled]
    
    permissions:
      pull-requests: write
      deployments: write
      id-token: write
      contents: read
    
    jobs:
      do:
        uses: cloudposse/github-actions-workflows-docker-ecr-eks-helmfile/.github/workflows/feature-branch.yml@main
        with:
          organization: "$\{\{ github.event.repository.owner.login \}\}"
          repository: "$\{\{ github.event.repository.name \}\}"
          open: $\{\{ github.event.pull_request.state == 'open' \}\}
          labels: $\{\{ toJSON(github.event.pull_request.labels.*.name) \}\}
          ref: $\{\{ github.event.pull_request.head.ref  \}\}
        secrets:
          github-private-actions-pat: "$\{\{ secrets.PUBLIC_REPO_ACCESS_TOKEN \}\}"
          registry: "$\{\{ secrets.ECR_REGISTRY \}\}"
          secret-outputs-passphrase: "$\{\{ secrets.GHA_SECRET_OUTPUT_PASSPHRASE \}\}"
          ecr-region: "$\{\{ secrets.ECR_REGION \}\}"
          ecr-iam-role: "$\{\{ secrets.ECR_IAM_ROLE \}\}"
  ```

on:
  workflow_call:
    inputs:
      organization:
        description: "Repository owner organization (ex. acme for repo acme/example)"
        required: false
        default: ${{ github.event.repository.owner.login }}
        type: string
      repository:
        description: "Repository name (ex. example for repo acme/example)"
        required: false
        default: ${{ github.event.repository.name }}
        type: string
      ref:
        description: "The fully-formed ref of the branch or tag that triggered the workflow run"
        required: false
        default: ${{ github.event.pull_request.head.ref }}
        type: string
      open:
        description: "Pull Request open/close state. Set true if opened"
        required: false
        type: boolean
        default: ${{ github.event.pull_request.state == 'open' }}
      labels:
        description: "Pull Request labels"
        required: false
        default: ${{ toJSON(github.event.pull_request.labels.*.name) }}
        type: string
    secrets:
      secret-outputs-passphrase:
        description: "Passphrase to encrypt/decrypt secret outputs with gpg. For more information [read](https://github.com/cloudposse/github-action-secret-outputs)"
        required: true
      registry:
        description: "ECR ARN"
        required: true
      github-private-actions-pat:
        description: "Github PAT allow to pull private repos"
        required: true
      ecr-region:
        description: "ECR AWS region"
        required: true
      ecr-iam-role:
        description: "IAM Role ARN provide ECR write/read access"
        required: true

permissions:
  pull-requests: write
  deployments: write
  id-token: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  ci:
    uses: cloudposse/github-actions-workflows/.github/workflows/ci-dockerized-app-build.yml@main
    with:
      organization: ${{ inputs.organization }}
      repository: ${{ inputs.repository }}
    secrets:
      ecr-region: ${{ secrets.ecr-region }}
      ecr-iam-role: ${{ secrets.ecr-iam-role }}
      registry: ${{ secrets.registry }}
      secret-outputs-passphrase: ${{ secrets.secret-outputs-passphrase }}

  cd:
    uses: cloudposse/github-actions-workflows/.github/workflows/cd-preview-helmfile.yml@main
    needs: [ ci ]
    if: ${{ always() }}
    with:
      image: ${{ needs.ci.outputs.image }}
      tag: ${{ needs.ci.outputs.tag }}
      repository: ${{ inputs.repository }}
      open: ${{ inputs.open }}
      labels: ${{ inputs.labels }}
      ref: ${{ inputs.ref }}
      exclusive: false
      env-label: |
        preview: deploy
    secrets:
      secret-outputs-passphrase: ${{ secrets.secret-outputs-passphrase }}
      github-private-actions-pat: ${{ secrets.github-private-actions-pat }}
