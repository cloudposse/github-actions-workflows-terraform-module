name: |-
  Features Branch (Pull Request) Workflow 
  
  ### Usage 
  
  In your repo create  __`.github/workflows/feature-branch.yaml`__
  
  ```yaml
    name: feature-branch
    on:
      pull_request:
        branches: [ main ]
        types: [opened, synchronize, reopened]
    
    permissions:
      pull-requests: write
      id-token: write
      contents: read
    
    jobs:
      terraform-module:
        uses: cloudposse/github-actions-workflows-terraform-module/.github/workflows/feature-branch.yml@main
        secrets:
          github_access_token: $\{\{ secrets.REPO_ACCESS_TOKEN \}\}
  ```

on:
  workflow_call:
    inputs:
      runs-on:
        description: "Overrides job runs-on setting (json-encoded list)"
        type: string
        required: false
        default: '["ubuntu-latest"]'
    secrets:
      github_access_token:
        description: "GitHub API token"
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  ci-terraform:
    uses: cloudposse/github-actions-workflows/.github/workflows/ci-terraform.yml@main
    with:
      # Workaround for https://github.com/community/community/discussions/9099
      # We should switch to nofilter once it's fixed
      filter-mode: diff_context
      suggestions: true
      runs-on: ${{ inputs.runs-on }}

  ci-readme:
    uses: cloudposse/github-actions-workflows/.github/workflows/ci-readme.yml@main
    with:
      # Workaround for https://github.com/community/community/discussions/9099
      # We should switch to nofilter once it's fixed
      filter-mode: diff_context
      suggestions: true
      runs-on: ${{ inputs.runs-on }}

  ci-codeowners:
    uses: cloudposse/github-actions-workflows/.github/workflows/ci-codeowners.yml@main
    with:
      is_fork: ${{ github.event.pull_request.head.repo.full_name != github.repository }}
      runs-on: ${{ inputs.runs-on }}
    secrets:
      github_access_token: ${{ secrets.github_access_token }}

  ci-gatekeeper:
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    if: ${{ always() }}
    steps:
      - run: "echo ${{ toJSON(needs) }}"
      - run: "! ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') || contains(needs.*.result, 'skipped') }}"
    needs: [ ci-terraform, ci-readme, ci-codeowners ]
