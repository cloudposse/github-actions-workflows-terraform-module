name: |-
  Hotfix release workflow
  
  Build, test Docker image, deploy it to EKS production environment and reintegrate `hotfix` into the main branch  
  
  ### Usage 
  
  Create in your repo  __`.github/workflows/hotfix-release.yaml`__
  
  ```yaml
    name: Hotfix Release
    on:
      push:
        branches: [ 'release/**' ]
    
    permissions:
      contents: write
      id-token: write
    
    jobs:
      do:
        uses: cloudposse/github-actions-workflows-docker-ecr-eks-helmfile/.github/workflows/hotfix-release.yml@main
        with:
          organization: "$\{\{ github.event.repository.owner.login \}\}"
          repository: "$\{\{ github.event.repository.name \}\}"
        secrets:
          github-private-actions-pat: "$\{\{ secrets.PUBLIC_REPO_ACCESS_TOKEN \}\}"
          registry: "$\{\{ secrets.ECR_REGISTRY \}\}"
          secret-outputs-passphrase: "$\{\{ secrets.GHA_SECRET_OUTPUT_PASSPHRASE \}\}"
          ecr-region: "$\{\{ secrets.ECR_REGION \}\}"
          ecr-iam-role: "$\{\{ secrets.ECR_IAM_ROLE \}\}"
  ```

on:
  workflow_call:
    inputs:
      organization:
        description: "Repository owner organization (ex. acme for repo acme/example)"
        required: false
        default: ${{ github.event.repository.owner.login }}
        type: string
      repository:
        description: "Repository name (ex. example for repo acme/example)"
        required: false
        default: ${{ github.event.repository.name }}
        type: string
      default_branch:
        description: "Default branch for this repo"
        required: true
        type: string
        default: main
    secrets:
      secret-outputs-passphrase:
        description: "Passphrase to encrypt/decrypt secret outputs with gpg. For more information [read](https://github.com/cloudposse/github-action-secret-outputs)"
        required: true
      registry:
        description: "ECR ARN"
        required: true
      github-private-actions-pat:
        description: "Github PAT allow to pull private repos"
        required: true
      ecr-region:
        description: "ECR AWS region"
        required: true
      ecr-iam-role:
        description: "IAM Role ARN provide ECR write/read access"
        required: true

permissions:
  contents: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  ci:
    uses: cloudposse/github-actions-workflows/.github/workflows/ci-dockerized-app-build.yml@main
    with:
      organization: ${{ inputs.organization }}
      repository: ${{ inputs.repository }}
    secrets:
      ecr-region: ${{ secrets.ecr-region }}
      ecr-iam-role: ${{ secrets.ecr-iam-role }}
      registry: ${{ secrets.registry }}
      secret-outputs-passphrase: ${{ secrets.secret-outputs-passphrase }}

  release:
    needs: [ci]
    uses: cloudposse/github-actions-workflows/.github/workflows/controller-hotfix-release.yml@main
    with:
      ref: ${{ github.sha }}

  promote:
    needs: [release]
    uses: cloudposse/github-action-workflows/.github/workflows/ci-dockerized-app-promote.yml@main
    with:
      organization: ${{ inputs.organization }}
      repository: ${{ inputs.repository }}
      version: ${{ needs.release.outputs.version }}
    secrets:
      ecr-region: ${{ secrets.ecr-region }}
      ecr-iam-role: ${{ secrets.ecr-iam-role }}
      registry: ${{ secrets.registry }}
      secret-outputs-passphrase: ${{ secrets.secret-outputs-passphrase }}

  cd:
    name: cd / production
    uses: cloudposse/github-actions-workflows/.github/workflows/cd-helmfile.yml@main
    needs: [ promote ]
    with:
      image: ${{ needs.promote.outputs.image }}
      tag: ${{ needs.promote.outputs.tag }}
      repository: ${{ inputs.repository }}
      environment: production
    secrets:
      secret-outputs-passphrase: ${{ secrets.secret-outputs-passphrase }}
      github-private-actions-pat: ${{ secrets.github-private-actions-pat }}

  reintegrate:
    uses: cloudposse/github-action-workflows/.github/workflows/controller-hotfix-reintegrate.yml@main
    needs: [ cd ]
    with:
      ref: ${{ github.ref }}
      target_branch: ${{ inputs.default_branch }}
    secrets:
      github-private-actions-pat: ${{ secrets.github-private-actions-pat }}

